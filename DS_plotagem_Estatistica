#python
#Tudo feito no colab, estudo de conceitos.
massa = [200,200,200,200,200,200,200,200,200,200,251,251,251,251,251,251,251,251,251,251,251,251,251,251,
         253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,257,257,257,257,257,257,257,257,257,
         257,257,257,260,260,260,260,260,260,260,260]

import numpy
#desvio padrão
x= numpy.std(massa)
print(f'O desvio padrão é igual à: {x:.2f}')
#media
m = numpy.mean(massa)
print(f'A média é igual à {m:.2f} Kg')
#variância
v = numpy.var(massa)
print(f'A variância é igual à: {v:.2f} Kg²')

#Distribuição de dados
import numpy
ex = numpy.random.uniform(0.0, 5.0, 250)
print(ex)

import matplotlib.pyplot as plt
plt.hist(ex, 5)
plt.show()

import numpy
import matplotlib.pyplot as plt
a = numpy.random.uniform(0.0, 5.0, 100000)
plt.hist(a, 100)
plt.show()

import numpy
import matplotlib.pyplot as plt
a = numpy.random.normal(5.0, 1.0, 100000)
plt.hist(a, 100)
plt.show()

import matplotlib.pyplot as plt
from scipy import stats

x = [89,43,36,36,95,10,66,34,38,20,26,29,48,64,6,5,36,66,72,40]
y = [21,46,3,35,67,95,53,72,58,10,26,34,90,33,38,20,56,2,47,15]

slope, intercept, r, p, std_err = stats.linregress(x, y)

def myfunc(x):
  return slope * x + intercept

mymodel = list(map(myfunc, x))

plt.scatter(x, y)
plt.plot(x, mymodel)
plt.show()

import numpy
from scipy import stats

x = [89,43,36,36,95,10,66,34,38,20,26,29,48,64,6,5,36,66,72,40]
y = [21,46,3,35,67,95,53,72,58,10,26,34,90,33,38,20,56,2,47,15]

slope, intercept, r, p, std_err = stats.linregress(x, y)

print(f'{r:.3f}')

from collections import Counter
import matplotlib.pyplot as plt
"""import numpy
numero_de_amigos = numpy.random.uniform(0, 100, 250)
print(numero_de_amigos)"""
numero_de_amigos = [21,46,3,35,67,95,53,72,58,10,26,25,25,2,5,25,2,5,2,5,52,55,25,34,90,33,38,20,56,2,47,15]
numero_de_amigos = Counter(numero_de_amigos)
xs = range(101)
ys = [numero_de_amigos[x] for x in xs]
plt.bar(xs, ys)
plt.axis([0, 101, 0, 25])
plt.title("Histograma do número de amigos")
plt.xlabel("N° de amigos")
plt.ylabel("N° de pessoas")
plt.show()

names =  ['Lucas', 'Alice', 'Thiago', 'João', 'Cássia']
for i, name in enumerate(names):
  print(f" Seja bem-vindo(a) {name}")
import random
my_best_friend = random.choice(names)
print(f"Você foi escolhido(a) {my_best_friend}")

import json
# Abrir o arquivo json.json
with open("json.json") as file:
    # Carregar seu conteúdo e torná-lo um novo dicionário
    data = json.load(file)

    # Excluir o par chave-valor "client" de cada pedido
    #for order in data["dados"]:
       # del order["_time"]

# Abrir (ou criar) um arquivo orders_new.json
# e armazenar a nova versão dos dados.
#with open("orders_new.json", 'w') as file:
    #json.dump(data, file)
print(json.dumps(data, indent=4,   sort_keys=True , separators=(". ", " = ")))
